@model dynamic

<div id="Index">
    <div>
        <section style="font-family: verdana;">
            <div class="mockup-content">
                <div class="morph-button morph-button-modal morph-button-modal-2 morph-button-fixed">
                    <button type="button">Login</button>
                    <div class="morph-content">
                        <div>
                            <div class="content-style-form content-style-form-1">
                                <span class="icon icon-close">Close the dialog</span>
                                <img src="../../Content/Images/Login Logo.png" style="height:100px; margin-top: 10px; margin-left: 120px" />
                                <h2 style="margin-top:10px">Login</h2>
                                <form>
                                    <p><label>Email</label><input type="text" /></p>
                                    <p><label>Password</label><input type="password" /></p>
                                    <button data-bind="click:logsies">Login</button>
                                </form>
                            </div>
                        </div>
                    </div>
                </div><!-- morph-button -->
                <strong class="joiner">or</strong>
                <div class="morph-button morph-button-modal morph-button-modal-3 morph-button-fixed">
                    <button type="button">Signup</button>
                    <div class="morph-content">
                        <div>
                            <div class="content-style-form content-style-form-2">
                                <span class="icon icon-close">Close the dialog</span>
                                <h2>Sign Up</h2>
                                <form>
                                    <p><label>Email</label><input type="text" /></p>
                                    <p><label>Password</label><input type="password" /></p>
                                    <p><label>Repeat Password</label><input type="password" /></p>
                                    <p><button>Sign Up</button></p>
                                </form>
                            </div>
                        </div>
                    </div>
                </div><!-- morph-button -->
                <p>Kohlrabi radish okra azuki bean corn fava bean mustard tigernut juccama green bean celtuce collard greens avocado quandong.</p>
            </div><!-- /form-mockup -->
        </section>
    </div>



    <div style="height: 300px; margin-top: 200px;background-color: #262261">
        <div class="col-md-12">
            <div class="col-md-4">
                <img src="../../Content/Images/Benchmark Landing Page Logo.png" style="height:200px; margin-top: 55px; margin-left: 40px" />
            </div>
            <div class="col-md-6">
                <label style="font-family: isiniScript medium; font-size: 150px; color:white; margin-left: 70px;margin-top: 35px">Benchmark</label>
                <div>
                    <a class="pull-left" style="color: white; cursor: pointer; font-size:22px; margin-top: -10px; margin-left: 220px">Register</a>
                </div>
                <div class="verticalLine" style="margin-top: -10px; margin-left: 330px"></div>


                <div class="morph-content">
                    <div class="content-style-form content-style-form-1">
                        <h2 class="pull-left" style="color: white; cursor: pointer; font-size:100px; margin-top: -24px; margin-left: 50px">Sign in</h2>
                        <form>
                            <p><label>Email</label><input type="text" /></p>
                            <p><label>Password</label><input type="password" /></p>
                            <p><button>Login</button></p>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<link href="~/Content/Custom/component.css" rel="stylesheet" />
<link href="~/Content/Custom/content.css" rel="stylesheet" />
<link href="~/Content/Custom/demo.css" rel="stylesheet" />
<link href="~/Content/Custom/normalize.css" rel="stylesheet" />
<script src="~/Scripts/Custom/modernizr.custom.js"></script>
<script src="~/Scripts/Custom/uiMorphingButton_fixed.js"></script>
<script src="~/Scripts/Custom/uiMorphingButton_inflow.js"></script>
<script src="~/Scripts/Custom/classie.js"></script>



<script>

    (function() {
        var docElem = window.document.documentElement, didScroll, scrollPosition;

        // trick to prevent scrolling when opening/closing button
        function noScrollFn() {
            window.scrollTo( scrollPosition ? scrollPosition.x : 0, scrollPosition ? scrollPosition.y : 0 );
        }

        function noScroll() {
            window.removeEventListener( 'scroll', scrollHandler );
            window.addEventListener( 'scroll', noScrollFn );
        }

        function scrollFn() {
            window.addEventListener( 'scroll', scrollHandler );
        }

        function canScroll() {
            window.removeEventListener( 'scroll', noScrollFn );
            scrollFn();
        }

        function scrollHandler() {
            if( !didScroll ) {
                didScroll = true;
                setTimeout( function() { scrollPage(); }, 60 );
            }
        };

        function scrollPage() {
            scrollPosition = { x : window.pageXOffset || docElem.scrollLeft, y : window.pageYOffset || docElem.scrollTop };
            didScroll = false;
        };

        scrollFn();

        [].slice.call( document.querySelectorAll( '.morph-button' ) ).forEach( function( bttn ) {
            new UIMorphingButton( bttn, {
                closeEl : '.icon-close',
                onBeforeOpen : function() {
                    // don't allow to scroll
                    noScroll();
                },
                onAfterOpen : function() {
                    // can scroll again
                    canScroll();
                },
                onBeforeClose : function() {
                    // don't allow to scroll
                    noScroll();
                },
                onAfterClose : function() {
                    // can scroll again
                    canScroll();
                }
            } );
        } );

        // for demo purposes only
        [].slice.call( document.querySelectorAll( 'form button' ) ).forEach( function( bttn ) {
            bttn.addEventListener( 'click', function( ev ) { ev.preventDefault(); } );
        } );
    })();
</script>


<style>
        .verticalLine {
            border-left: 2px solid white;
            height: 25px;
        }

    body {
        background-color: white;
    }


</style>


@section scripts {
    <script>


        //        var IndexViewModel = function () {
        //            var self = this;
        //
        //            self.goToLoginScreen = function () {
        //                changeLocation("Home/Login", true);
        //            }
        //        }


        ////

        var HomeViewModel = function () {
            var self = this;
            self.username = ko.observable("Admin");
            self.password = ko.observable("123");


            self.logsies = function () {
                var loginViewModel = new LoginViewModel(self.username(), self.password());
                //changeLocation("Home/Login", true);
                sendViewModelToController("Home/LoginAccount", ko.toJSON(loginViewModel), function (response) {
                    busyViewModel.hide();
                    if (!response.isOk) {
                    }

                    changeLocation(response.startPage, true);
                });
            }
        }

        //        var logsies = function (){
        //                        self.logsies = function() {
        //                            var loginViewModel = new LoginViewModel(self.username(), self.password());
        //                            //changeLocation("Home/Login", true);
        //                            sendViewModelToController("Home/LoginAccount", ko.toJSON(loginViewModel), function(response) {
        //                                busyViewModel.hide();
        //                                if (!response.isOk) {
        //                                }
        //
        //                                changeLocation(response.startPage, true);
        //                            });
        //                        }
        //        }

        var LoginViewModel = function (username, password) {
            var self = this;
            self.Username = ko.observable(username);
            self.Password = ko.observable(password);
        }

        $(document).ready(function () {
            busyViewModel.hide();
        });

        $("#password").keyup(function (event) {
            if (event.keyCode == 13) {
                $("#loginButton").click();
            }
        });

        var homeViewModel = new HomeViewModel();
        ko.applyBindings(homeViewModel, document.getElementById("Index"));


    </script>


    <script>
        $(document).ready(function () {
            busyViewModel.hide();
        });
    </script>;
}